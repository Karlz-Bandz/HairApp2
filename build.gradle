
buildscript {
	repositories {
		mavenCentral()
		gradlePluginPortal()
	}
	dependencies {
		classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
}


apply plugin: 'com.github.johnrengelman.shadow'

group = 'pl.hairbybieszczii'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.testng:testng:7.1.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
//	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'


}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	archivesBaseName = "hair"
	duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.EXCLUDE

	manifest {
		attributes "Main-Class":  "pl.hairbybieszczii.hair_bieszczii.HairBieszcziiApplication"
	}

	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}
